<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Freddie's SEO Blog :// - SEO</title><link href="https://freddielarkins.xyz/" rel="alternate"></link><link href="https://freddielarkins.xyz/feeds/seo.atom.xml" rel="self"></link><id>https://freddielarkins.xyz/</id><updated>2022-03-20T16:23:00+00:00</updated><subtitle>SEO, Python and other stuff.</subtitle><entry><title>Using Text to Columns to analyse a site's traffic sources</title><link href="https://freddielarkins.xyz/using-text-to-columns-to-analyse-a-site-s-traffic-sources.html" rel="alternate"></link><published>2022-03-20T16:23:00+00:00</published><updated>2022-03-20T16:23:00+00:00</updated><author><name>Freddie Larkins</name></author><id>tag:freddielarkins.xyz,2022-03-20:/using-text-to-columns-to-analyse-a-site-s-traffic-sources.html</id><summary type="html">&lt;p&gt;Excel's Text to Columns feature is a quick and easy way to segment a list of URLs by subfolder to understand which parts of a site drive organic traffic.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Text to Columns is probably one of the tools I use most frequently in my day-to-day SEO work.&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Kudos to Distilled's &lt;a href="https://www.distilled.net/excel-for-seo/"&gt;Excel for SEOs&lt;/a&gt; guide for inspiring this article – I'd highly recommend it to any SEOs looking to sharpen up their Excel skills. Anyway, let's get into it.&lt;/p&gt;
&lt;h2 id="how-to-use-text-to-columns"&gt;How to use Text to Columns&lt;/h2&gt;
&lt;p&gt;I've used an Ahrefs export for &lt;a href="https://www.hubspot.com/"&gt;HubSpot&lt;/a&gt; for this demo, but you can use Text to Columns for any dataset containing URLs or URL paths.&lt;/p&gt;
&lt;h3 id="1-format-your-data-as-a-table"&gt;1) Format your data as a table&lt;/h3&gt;
&lt;p&gt;Highlight your dataset with &lt;code&gt;CTRL+A&lt;/code&gt; and convert it into a table with CTRL+T.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of the 'Create Table' pop-up" src="/images/png/create-table.png"&gt;&lt;/p&gt;
&lt;p&gt;(This step is optional – I find it makes the data easier to work with.)&lt;/p&gt;
&lt;h3 id="2-split-out-the-urls-using-text-to-columns"&gt;2) Split out the URLs using Text to Columns&lt;/h3&gt;
&lt;p&gt;Highlight the column containing your URLs. In the top Ribbon, click on &lt;code&gt;Data&lt;/code&gt; &amp;gt; &lt;code&gt;Text to Columns&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of the location of the Text to Columns button in Excel" src="/images/png/text-to-columns-location.png"&gt;&lt;/p&gt;
&lt;p&gt;That'll bring up the Text to Columns Wizard. We'll run through the steps carefully to get the desired output.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; leave the Wizard as is and hit &lt;code&gt;Next &amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot showing step 1 of the Text to Columns Wizard" src="/images/png/text-to-columns-wizard-screenshot-step-1.png"&gt;&lt;/p&gt;
&lt;p&gt;The option to split our text (the URLs) by a delimiter – i.e. a specified text character – is selected by default.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; uncheck the default delimiter (Tab) and enter a forward slash in the &lt;code&gt;Other:&lt;/code&gt; input box.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot showing step 2 of the Text to Columns Wizard" src="/images/png/text-to-columns-wizard-screenshot-step-2.png"&gt;&lt;/p&gt;
&lt;p&gt;This tells the Text to Columns wizard to look for forward slashes as a way of 'splitting up' your URLs. You can also check &lt;code&gt;Treat consecutive delimiters as one&lt;/code&gt; to avoid an empty output column for the second slash in 'https:/&lt;strong&gt;/&lt;/strong&gt;'.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; select where the output will go.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of step 3 of the Text to Columns wizard" src="/images/png/text-to-columns-wizard-screenshot-step-3.png"&gt;&lt;/p&gt;
&lt;p&gt;Choose the first cell in the first empty column next to your table. &lt;em&gt;Beware:&lt;/em&gt; if you proceed with Excel's default selection for the Destination cell, the newly-generated columns will overwrite whatever data you have in the columns to the right of your URLs.&lt;/p&gt;
&lt;p&gt;And we're done!&lt;/p&gt;
&lt;p&gt;I like to rename my columns to make analysis a little easier.&lt;/p&gt;
&lt;p&gt;I also tend to filter the first 'subfolder' column – &lt;code&gt;Path_1&lt;/code&gt; – for any blank cells and fill these in as 'homepage'.&lt;/p&gt;
&lt;h2 id="analysing-your-data-for-seo-insights"&gt;Analysing your data for SEO insights&lt;/h2&gt;
&lt;p&gt;You can use every SEO's best friend – a pivot table – to mine your data for useful insights. To turn your data into a pivot, highlight your table with &lt;code&gt;CTRL+A&lt;/code&gt; and hit &lt;code&gt;ALT+D+P&lt;/code&gt; to open up the PivotTable wizard, mashing &lt;code&gt;Enter&lt;/code&gt; until a pivot table appears in a new sheet.&lt;/p&gt;
&lt;p&gt;Let's see what we can find out about HubSpot.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The majority of traffic goes to HubSpot's blog subdomain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To be precise, Ahrefs estimates that almost 91% of traffic goes to its blog. Kudos to HubSpot's content creation team!&lt;/p&gt;
&lt;p&gt;This pivot chart uses the 'Domain/subdomain' column generated by Text to Columns, aggregating traffic:
&lt;img alt="Pie chart showing traffic by subdomain" src="/images/png/traffic-by-subdomain.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HubSpot's blog traffic is driven by its /marketing/, /sales/ and /website/ subfolders&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This time, we've gone one level deeper to investigate the subfolders within &lt;a href="https://blog.hubspot.com/"&gt;https://blog.hubspot.com/&lt;/a&gt;. It seems that HubSpot's marketing content drives over half of of all traffic to its blog, followed by its Sales and Webmaster content.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bar chart showing traffic by subfolder within the blog" src="/images/png/traffic-by-blog-subfolder.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Almost a quarter of blog traffic is driven by featured snippets&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I've turned this final pivot table into a Bar Graph via &lt;code&gt;Insert&lt;/code&gt; &amp;gt; &lt;code&gt;Recommended Charts&lt;/code&gt; &amp;gt; &lt;code&gt;Clustered Column&lt;/code&gt;. And wow! Almost 25% of the half a million monthly sessions to the blog come via a featured snippet. HubSpot are clearly masters at answering a user's primary question on a topic in a clear and concise manner.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bar chart showing traffic to the blog by SERP feature" src="/images/png/traffic-by-serp-feature.png"&gt;
&lt;center&gt;&lt;em&gt;I get it - I'm terrible at Data Vis&lt;/em&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;There is lots more you can do with this dataset; we haven't even started incorporating keywords into our analysis yet!&lt;/p&gt;
&lt;p&gt;Feel free to &lt;a href="/excel-files/hubspot-t2c-analysis.xlsx"&gt;download the Excel spreadsheet&lt;/a&gt; used in this tutorial and have a go yourself!&lt;/p&gt;</content><category term="SEO"></category><category term="Excel"></category><category term="Text to Columns"></category></entry><entry><title>Identifying branded keywords in Excel</title><link href="https://freddielarkins.xyz/identifying-branded-keywords-in-excel.html" rel="alternate"></link><published>2022-03-20T15:59:00+00:00</published><updated>2022-03-20T15:59:00+00:00</updated><author><name>Freddie Larkins</name></author><id>tag:freddielarkins.xyz,2022-03-20:/identifying-branded-keywords-in-excel.html</id><summary type="html">&lt;p&gt;It’s always helpful to identify branded terms when you’re dealing with a list of keywords. Filtering them out gives you a view on non-branded performance and potential areas of improvement.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Any large-scale analysis of a group of keywords is always enhanced by identifying branded and non-branded keywords. Thankfully, it's simple to do in Excel.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-formula"&gt;The formula&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-it-works"&gt;How it works&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-search-function"&gt;The SEARCH function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-isnumber-function"&gt;The ISNUMBER function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-if-function"&gt;The IF function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2 id="the-formula"&gt;The formula&lt;/h2&gt;
&lt;p&gt;Assuming your keywords are in column A, this formula should do the trick:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;IF&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ISNUMBER&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;SEARCH&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;BRANDNAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;A2&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Branded&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Non-branded&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Just replace &lt;code&gt;BRANDNAME&lt;/code&gt; with the brand that you’re working, copy and paste the formula into Excel and apply it to the entire column of keywords. That’ll give you a column with either a 'Branded' or 'Non-branded' value for each keyword.~&lt;/p&gt;
&lt;h2 id="how-it-works"&gt;How it works&lt;/h2&gt;
&lt;p&gt;Let’s break down each part of the formula, working inside out. We’ll use an example set of Nike keywords to illustrate each step.&lt;/p&gt;
&lt;h3 id="the-search-function"&gt;The SEARCH function&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://exceljet.net/excel-functions/excel-search-function"&gt;SEARCH function&lt;/a&gt; looks for the provided string of text inside another &lt;a href="https://www.deskbright.com/excel/excel-string-functions/"&gt;string&lt;/a&gt; of text, returning the position of the first character in the case of a match. It’s not case sensitive. In our case, &lt;code&gt;=SEARCH("nike",A2)&lt;/code&gt; is asking Excel to look for the text “nike” inside our keyword text string.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of an Excel table demonstrating the application of the SEARCH function to a set of keywords." src="/images/png/search-function-screenshot.png"&gt;&lt;/p&gt;
&lt;p&gt;If it is present, the formula will return the position of the “n” in “nike”. If it is not present, the formula will evaluate as a #VALUE! error.&lt;/p&gt;
&lt;h3 id="the-isnumber-function"&gt;The ISNUMBER function&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://exceljet.net/excel-functions/excel-isnumber-function"&gt;ISNUMBER function&lt;/a&gt; simply checks that a given cell is a number, returning either TRUE or FALSE. Thus, our formula becomes &lt;code&gt;=ISNUMBER(SEARCH("nike"),A2)&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of an Excel table demonstrating the application of the SEARCH function in conjunction with ISNUMBER to a set of keywords." src="/images/png/search-and-isnumber-functions.png"&gt;&lt;/p&gt;
&lt;p&gt;By wrapping our &lt;code&gt;SEARCH&lt;/code&gt; function with &lt;code&gt;ISNUMBER&lt;/code&gt;, we’re converting the output of the former into a Boolean TRUE or FALSE value. In other words:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If “nike” is &lt;em&gt;present&lt;/em&gt; in keyword –&amp;gt; &lt;code&gt;SEARCH&lt;/code&gt; returns a number –&amp;gt; &lt;code&gt;ISNUMBER&lt;/code&gt; evaluates as TRUE&lt;/li&gt;
&lt;li&gt;If “nike” is &lt;em&gt;not present&lt;/em&gt; in keyword –&amp;gt; &lt;code&gt;SEARCH&lt;/code&gt; returns an #VALUE! error –&amp;gt; &lt;code&gt;ISNUMBER&lt;/code&gt; evaluates as FALSE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Essentially, we’re converting the results of &lt;code&gt;SEARCH&lt;/code&gt; into something we can use in the final component of the formula, our &lt;code&gt;IF&lt;/code&gt; statement.&lt;/p&gt;
&lt;h3 id="the-if-function"&gt;The IF function&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://exceljet.net/excel-functions/excel-if-function"&gt;IF function&lt;/a&gt; uses a logical test to return one value for a TRUE result, and another for FALSE.&lt;/p&gt;
&lt;p&gt;We bring everything together using an &lt;code&gt;IF&lt;/code&gt; statement: &lt;code&gt;=IF(ISNUMBER(SEARCH("BRANDNAME",A2)),"Branded","Non-branded")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of an Excel table showing the full function" src="/images/png/search-isnumber-and-if-functions.png"&gt;&lt;/p&gt;
&lt;p&gt;Our logical test is the &lt;code&gt;ISNUMBER(...)&lt;/code&gt; component of the function. If that evaluates as TRUE, the &lt;code&gt;IF&lt;/code&gt; statement returns “Branded”. If FALSE, it returns “Non-branded”.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;And that’s it!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I use this function without fail when I’m dealing with lists of keywords. After reading this, hopefully you will too.&lt;/p&gt;</content><category term="SEO"></category><category term="Excel"></category></entry></feed>